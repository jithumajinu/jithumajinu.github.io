{"version":3,"sources":["reportWebVitals.ts","components/Logo.tsx","components/Brand.tsx","components/navbarItems/NavbarItems.tsx","components/navbarItems/index.ts","components/NavToggle.tsx","components/layout/DefaultLayout.tsx","components/layout/index.ts","apiServices/RestApiService.ts","mock/index.ts","apiServices/auth/service/ApiConfig.ts","util/UrlUtil.ts","apiServices/auth/service/RestService.ts","apiServices/auth/service/ApiService.ts","apiServices/auth/service/LoginService.ts","pages/dashboard/Dashboard.tsx","pages/dashboard/index.ts","apiServices/demo/sessions.ts","apiServices/demo/users.ts","context/useAuth.tsx","context/AppContext.tsx","pages/about/index.ts","pages/about/About.tsx","components/ErrorPage/ErrorPage.tsx","components/ErrorPage/index.ts","pages/authentication/404/index.ts","pages/authentication/404/Error404.tsx","App.tsx","hook/UseApp.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","width","height","style","className","styles","display","viewBox","version","xmlns","preserveAspectRatio","x1","y1","x2","y2","id","stopColor","offset","stroke","strokeWidth","fill","fillRule","transform","strokeLinecap","strokeLinejoin","points","cx","cy","r","Brand","props","Stack","marginTop","to","marginLeft","renderAdminSpeaker","ref","onClose","left","top","Popover","full","Dropdown","Menu","onSelect","eventKey","console","log","Item","panel","padding","divider","icon","href","target","as","renderNoticeSpeaker","title","List","map","item","index","time","content","spacing","Badge","color","textAlign","Button","onClick","NavbarItems","trigger","useRef","Whisper","placement","speaker","IconButton","fontSize","Avatar","size","circle","src","alt","NavToggle","expand","onChange","Navbar","appearance","Nav","pullRight","getHeight","DOMHelper","on","DefaultLayout","navs","useState","setExpand","window","windowHeight","setWindowHeight","useEffect","resizeListenner","off","containerClasses","classNames","navBodyStyle","overflow","Row","Container","Sidebar","flexDirection","collapsible","Sidenav","expanded","defaultOpenKeys","Body","BaseNavLink","Content","instance","length","ApiConfig","UrlUtil","qs","_qs","stringify","path","queryString","axios","require","RestService","Accept","lang","headers","_headers","Object","assign","this","createHeaders","config","baseURL","serverEndpoint","withCredentials","get","createPath","e","error","data","post","delete","ApiService","_restService","_jsonConvert","JsonConvert","OperationMode","ENABLE","ValueCheckingMode","ALLOW_OBJECT_NULL","params","restService","response","body","JSON","parse","undefined","classRef","Array","isArray","jsonConvert","deserialize","deserializeObject","value","LoginService","authentication","apiName","RestApiService","_loginService","loginService","Column","Table","HeaderCell","Cell","_data","from","_","rowIndex","firstName","faker","name","lastName","gender","findName","avatar","image","city","address","street","email","internet","postcode","zipCode","phone","number","amount","finance","age","Math","floor","random","stars","followers","rating","progress","createRowData","restApi","getInstance","Dashboard","pageSize","pageNumber","totalPages","previous","next","totalCount","paginationContent","hasData","pagingArea","hasError","prev","first","last","ellipsis","boundaryLinks","activePage","setActivePage","maxButtons","total","layout","limit","setLimit","testData","findAll","Panel","header","Grid","fluid","virtualized","max","align","fixed","dataKey","minWidth","flexGrow","Pagination","limitOptions","onChangePage","onChangeLimit","session","user","AuthContext","createContext","AuthProvider","children","setUser","setError","loading","setLoading","loadingInitial","setLoadingInitial","login","password","sessionsApi","newUser","catch","newError","finally","signUp","usersApi","logout","_error","memoedValue","useMemo","Provider","AppContext","React","AppProvider","About","authUser","useContext","options","label","selectedOption","setSelectedOption","defaultValue","isMulti","classNamePrefix","ErrorPage","code","displayName","Error404","App","useAppMethods","setAuthUser","useApp","basename","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\ninterface LogoProps {\n  width?: number;\n  height?: number;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport default function Logo({ width, height, style, className = '' }: LogoProps) {\n  const styles = { width, height, display: 'inline-block', ...style };\n  return (\n    <div\n      style={styles}\n      className={`rsuite-logo logo-animated logo-animated-delay-half-seconds bounce-in ${className} `}\n    >\n      <svg\n        viewBox=\"0 0 120 138\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100%\"\n        height=\"100%\"\n        preserveAspectRatio=\"xMidYMin slice\"\n      >\n        <title>React Suite</title>\n        <defs>\n          <linearGradient\n            x1=\"71.5906675%\"\n            y1=\"12.5658792%\"\n            x2=\"45.577567%\"\n            y2=\"114.749969%\"\n            id=\"linearGradient-1\"\n          >\n            <stop stopColor=\"#6594ED\" offset=\"0%\" />\n            <stop stopColor=\"#316BD9\" offset=\"100%\" />\n          </linearGradient>\n          <linearGradient x1=\"67.6269531%\" y1=\"0%\" x2=\"50%\" y2=\"78.0639648%\" id=\"linearGradient-2\">\n            <stop stopColor=\"#EC5060\" offset=\"0%\" />\n            <stop stopColor=\"#EA7480\" offset=\"100%\" />\n          </linearGradient>\n          <linearGradient x1=\"67.6269531%\" y1=\"0%\" x2=\"50%\" y2=\"79.2449951%\" id=\"linearGradient-3\">\n            <stop stopColor=\"#EC5060\" offset=\"0%\" />\n            <stop stopColor=\"#EA7480\" offset=\"100%\" />\n          </linearGradient>\n        </defs>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g id=\"Group-22\" transform=\"translate(3.000000, 6.000000)\">\n            <polyline\n              className=\"polyline-axis\"\n              stroke=\"url(#linearGradient-1)\"\n              strokeWidth=\"12\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              points=\"111 31 57 0 19 22 95 104 57 126 3 95\"\n            />\n            <polyline\n              className=\"polyline-limb\"\n              id=\"Path-5-Copy-7\"\n              stroke=\"url(#linearGradient-2)\"\n              strokeWidth=\"12\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(22.000000, 63.000000) scale(-1, -1) translate(-22.000000, -63.000000) \"\n              points=\"41 31 3 54 41 95 41 52\"\n            />\n            <polyline\n              className=\"polyline-limb\"\n              stroke=\"url(#linearGradient-3)\"\n              strokeWidth=\"12\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              points=\"111 31 73 54 111 95 111 52\"\n            />\n            <circle className=\"circle\" fill=\"#6594ED\" cx=\"3\" cy=\"95\" r=\"3\" />\n            <circle fill=\"#6594ED\" cx=\"111\" cy=\"31\" r=\"3\" />\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from './Logo';\nimport { Stack } from 'rsuite';\n\nexport interface BrandProps {}\n\nexport const Brand: FC<BrandProps> = props => {\n  return (\n    <Stack className=\"brand\" {...props}>\n      <Logo height={26} style={{ marginTop: 6 }} />\n      <Link to=\"/\">\n        <span style={{ marginLeft: 14 }}>Gowru-UI</span>\n      </Link>\n    </Stack>\n  );\n};\nexport default Brand;\n","import React, { useRef } from 'react';\nimport {\n  Dropdown,\n  Popover,\n  Whisper,\n  WhisperInstance,\n  Stack,\n  Badge,\n  Avatar,\n  IconButton,\n  List,\n  Button,\n} from 'rsuite';\nimport NoticeIcon from '@rsuite/icons/Notice';\nimport HelpOutlineIcon from '@rsuite/icons/HelpOutline';\n\nconst renderAdminSpeaker = ({ onClose, left, top, className }: any, ref: any) => {\n  const handleSelect = (eventKey: any) => {\n    onClose();\n    console.log(eventKey);\n  };\n\n  return (\n    <Popover ref={ref} className={className} style={{ left, top }} full>\n      <Dropdown.Menu onSelect={handleSelect}>\n        <Dropdown.Item panel style={{ padding: 10, width: 160 }}>\n          <p>Signed in as</p>\n          <strong>Administrator</strong>\n        </Dropdown.Item>\n        <Dropdown.Item divider />\n        <Dropdown.Item>Set status</Dropdown.Item>\n        <Dropdown.Item>Profile & account</Dropdown.Item>\n        <Dropdown.Item>Feedback</Dropdown.Item>\n        <Dropdown.Item divider />\n        <Dropdown.Item>Settings</Dropdown.Item>\n        <Dropdown.Item>Sign out</Dropdown.Item>\n        <Dropdown.Item\n          icon={<HelpOutlineIcon />}\n          href=\"https://rsuitejs.com\"\n          target=\"_blank\"\n          as=\"a\"\n        >\n          Help{' '}\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n  );\n};\n\nconst renderNoticeSpeaker = ({ onClose, left, top, className }: any, ref: any) => {\n  const notifications = [\n    [\n      '7 hours ago',\n      'The charts of the dashboard have been fully upgraded and are more visually pleasing.',\n    ],\n    [\n      '13 hours ago',\n      'The function of virtualizing large lists has been added, and the style of the list can be customized as required.',\n    ],\n    ['2 days ago', 'Upgraded React 18 and Webpack 5.'],\n    [\n      '3 days ago',\n      'Upgraded React Suite 5 to support TypeScript, which is more concise and efficient.',\n    ],\n  ];\n\n  return (\n    <Popover ref={ref} className={className} style={{ left, top, width: 300 }} title=\"Last updates\">\n      <List>\n        {notifications.map((item, index) => {\n          const [time, content] = item;\n          return (\n            <List.Item key={index}>\n              <Stack spacing={4}>\n                <Badge /> <span style={{ color: '#57606a' }}>{time}</span>\n              </Stack>\n\n              <p>{content}</p>\n            </List.Item>\n          );\n        })}\n      </List>\n      <div style={{ textAlign: 'center', marginTop: 20 }}>\n        <Button onClick={onClose}>More notifications</Button>\n      </div>\n    </Popover>\n  );\n};\n\nconst NavbarItems = () => {\n  const trigger = useRef<WhisperInstance>(null);\n\n  return (\n    <Stack className=\"header\" spacing={8}>\n      <Whisper placement=\"bottomEnd\" trigger=\"click\" ref={trigger} speaker={renderNoticeSpeaker}>\n        <IconButton\n          icon={\n            <Badge content={5}>\n              <NoticeIcon style={{ fontSize: 20 }} />\n            </Badge>\n          }\n        />\n      </Whisper>\n\n      <Whisper placement=\"bottomEnd\" trigger=\"click\" ref={trigger} speaker={renderAdminSpeaker}>\n        <Avatar\n          size=\"sm\"\n          circle\n          src=\"https://avatars.githubusercontent.com/u/8371025?s=40&v=4\"\n          alt=\"jithu.majinu\"\n          style={{ marginLeft: 8 }}\n        />\n      </Whisper>\n    </Stack>\n  );\n};\n\nexport default NavbarItems;\n","import NavbarItems from './NavbarItems';\n\nexport default NavbarItems;\n","import React from 'react';\nimport { Navbar, Nav } from 'rsuite';\nimport ArrowLeftLineIcon from '@rsuite/icons/ArrowLeftLine';\nimport ArrowRightLineIcon from '@rsuite/icons/ArrowRightLine';\n\ninterface NavToggleProps {\n  expand?: boolean;\n  onChange?: () => void;\n}\n\nconst NavToggle = ({ expand, onChange }: NavToggleProps) => {\n  return (\n    <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n      <Nav pullRight>\n        <Nav.Item\n          onClick={onChange}\n          style={{ textAlign: 'center' }}\n          icon={expand ? <ArrowLeftLineIcon /> : <ArrowRightLineIcon />}\n        />\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavToggle;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Container, Row, Sidebar, Sidenav, Content, Nav, DOMHelper, Panel } from 'rsuite';\nimport { NavLinkProps, NavLink as BaseNavLink, Outlet } from 'react-router-dom';\nimport Brand from '../Brand';\nimport NavbarItems from '../navbarItems';\nimport NavToggle from '../NavToggle';\n\nimport { Icon } from '@rsuite/icons';\nimport CubesIcon from '@rsuite/icons/legacy/Cubes';\n\nconst { getHeight, on } = DOMHelper;\n\n// const NavItem = (props: { [x: string]: any; title: any; eventKey: any }) => {\n//   const { title, eventKey, ...rest } = props;\n//   return (\n//     <Nav.Item eventKey={eventKey} as={NavLink} {...rest}>\n//       {title}\n//     </Nav.Item>\n//   );\n// };\n\nexport interface NavItemData {\n  eventKey: string;\n  title: string;\n  icon?: any;\n  to?: string;\n  target?: string;\n  children?: NavItemData[];\n}\n\nexport interface DefaultLayoutProps {\n  navs?: NavItemData[];\n  children?: React.ReactNode;\n}\n\nconst DefaultLayout = (props: DefaultLayoutProps) => {\n  const { navs } = props;\n  const [expand, setExpand] = useState(true);\n  const [windowHeight, setWindowHeight] = useState(getHeight(window));\n\n  useEffect(() => {\n    setWindowHeight(getHeight(window));\n    const resizeListenner = on(window, 'resize', () => setWindowHeight(getHeight(window)));\n\n    return () => {\n      resizeListenner.off();\n    };\n  }, []);\n\n  const containerClasses = classNames('page-container', {\n    'container-full': !expand,\n  });\n\n  const navBodyStyle: React.CSSProperties = expand\n    ? { height: windowHeight - 112, overflow: 'auto' }\n    : {};\n\n  return (\n    <>\n      <Row className=\"laout-header\">\n        <Brand />\n        <NavbarItems />\n      </Row>\n\n      <Container className=\"frame\">\n        <Sidebar\n          style={{ display: 'flex', flexDirection: 'column' }}\n          width={expand ? 260 : 56}\n          collapsible\n        >\n          {/* <Sidenav.Header>\n          <Brand />\n        </Sidenav.Header> */}\n          <Sidenav expanded={expand} appearance=\"subtle\" defaultOpenKeys={['2', '3']}>\n            <Sidenav.Body style={navBodyStyle}>\n              <Nav>\n                <Nav.Item as={BaseNavLink} key=\"home\" to=\"/home\" icon={<CubesIcon />}>\n                  Home\n                </Nav.Item>\n                <Nav.Item as={BaseNavLink} key=\"about\" to=\"/about\" icon={<CubesIcon />}>\n                  About\n                </Nav.Item>\n                <Nav.Item as={BaseNavLink} key=\"contact\" to=\"/contact\" icon={<CubesIcon />}>\n                  Contact\n                </Nav.Item>\n              </Nav>\n            </Sidenav.Body>\n          </Sidenav>\n          <NavToggle expand={expand} onChange={() => setExpand(!expand)} />\n        </Sidebar>\n\n        <Container className={containerClasses}>\n          <Content>\n            <Outlet />\n          </Content>\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default DefaultLayout;\n","import DefaultLayout from './DefaultLayout';\n\nexport default DefaultLayout;\n","import { LoginService } from './auth/service/LoginService';\n\nlet instance: RestApiService;\n\nexport class RestApiService {\n  private _loginService?: LoginService;\n  //Continue\n  //private _xyzService?: XyzService;\n\n  static getInstance() {\n    if (!instance) {\n      instance = new RestApiService();\n    }\n    return instance;\n  }\n\n  constructor() {\n    this.loginService = new LoginService();\n\n    //Continue\n    // this.xyzService = new XyzService();\n  }\n\n  get loginService(): LoginService {\n    return this._loginService || new LoginService();\n  }\n\n  set loginService(value: LoginService) {\n    this._loginService = value;\n  }\n\n  //Continue getter and setter\n  /*\n  get xyzService(): XyzService {\n    return this._xyzService || new XyzService();\n  }\n\n  set loginService(value: XyzService) {\n    this._xyzService = value;\n  }\n  */\n}\n","import { faker } from '@faker-js/faker/locale/en';\n\nexport function mockUsers(length: number) {\n  const createRowData = (rowIndex: any) => {\n    const firstName = faker.name.firstName();\n    const lastName = faker.name.lastName();\n    const gender = faker.name.gender(true) as 'female' | 'male';\n    const name = faker.name.findName(firstName, lastName, gender);\n    const avatar = faker.image.avatar();\n\n    const city = faker.address.city();\n    const street = faker.address.street();\n    const email = faker.internet.email();\n    const postcode = faker.address.zipCode();\n    const phone = faker.phone.number();\n    const amount = faker.finance.amount(1000, 90000);\n\n    const age = Math.floor(Math.random() * 30) + 18;\n    const stars = Math.floor(Math.random() * 10000);\n    const followers = Math.floor(Math.random() * 10000);\n    const rating = 2 + Math.floor(Math.random() * 3);\n    const progress = Math.floor(Math.random() * 100);\n\n    return {\n      id: rowIndex + 1,\n      name,\n      firstName,\n      lastName,\n      avatar,\n      city,\n      street,\n      postcode,\n      email,\n      phone,\n      gender,\n      age,\n      stars,\n      followers,\n      rating,\n      progress,\n      amount,\n    };\n  };\n\n  return Array.from({ length }).map((_, index) => {\n    return createRowData(index);\n  });\n}\n\nexport function mockTreeData(options: {\n  limits: number[];\n  labels: string | string[] | ((layer: number, value: string, faker: any) => string);\n  getRowData?: (layer: number, value: string) => any[];\n}) {\n  const { limits, labels, getRowData } = options;\n  const depth = limits.length;\n\n  const data: any = [];\n  const mock = (list: any, parentValue?: string, layer = 0) => {\n    const length = limits[layer];\n\n    Array.from({ length }).forEach((_, index) => {\n      const value = parentValue ? parentValue + '-' + (index + 1) : index + 1 + '';\n      const children: any = [];\n      const label = Array.isArray(labels) ? labels[layer] : labels;\n\n      let row: any = {\n        label: typeof label === 'function' ? label(layer, value, faker) : label + ' ' + value,\n        value,\n      };\n\n      if (getRowData) {\n        row = {\n          ...row,\n          ...getRowData(layer, value),\n        };\n      }\n\n      list.push(row);\n\n      if (layer < depth - 1) {\n        row.children = children;\n        mock(children, value, layer + 1);\n      }\n    });\n  };\n\n  mock(data);\n\n  return data;\n}\n","// import config from 'config';\n// const endpoint: any = config.get('endpoint');\n// const cookie = config.get('cookie');\n\nexport class ApiConfig {\n  // static ENV_PROD = '';\n  // static ENV_STG = 'stg';\n  // static ENV_TEST = 'test';\n  // static ENV_LOCAL = 'local';\n\n  // static isCI() {\n  //   //return true;\n  //   return process && process.env && process.env.CI;\n  // }\n\n  // static getDomain() {\n  //   if (typeof window !== 'undefined' && window.location && window.location.hostname) {\n  //     return window.location.hostname.toLowerCase();\n  //   }\n  //   return undefined;\n  // }\n\n  // static getEnvironment() {\n  //   let domain = ApiConfig.getDomain();\n  //   if (domain === undefined || domain.includes('.local.') || domain.includes('10.0.2.2')) {\n  //     return ApiConfig.ENV_LOCAL;\n  //   } else if (domain.includes('.test.')) {\n  //     return ApiConfig.ENV_TEST;\n  //   } else if (domain.includes('.stg.')) {\n  //     return ApiConfig.ENV_STG;\n  //   } else {\n  //     return ApiConfig.ENV_PROD;\n  //   }\n  // }\n\n  // static getAuthenticationCookieName() {\n  //   if (ApiConfig.isCI()) {\n  //     return 'testatkn';\n  //   }\n  //   // return cookie.auth;\n  //   // let env = ApiConfig.getEnvironment();\n  //   // if (env === ApiConfig.ENV_PROD) {\n  //   //   return 'atkn';\n  //   // } else if (env === ApiConfig.ENV_STG) {\n  //   //   return 'stgatkn';\n  //   // } else if (env === ApiConfig.ENV_TEST) {\n  //   //   return 'testatkn';\n  //   // }\n  //   // return 'localatkn';\n  // }\n\n  static serverEndpoint() {\n    //if (ApiConfig.isCI()) {\n    if (true) {\n      return 'http://localhost:3000';\n    }\n\n    return 'http://localhost:3000';\n    // return endpoint.cloudApi;\n  }\n}\n","import _qs from 'qs';\nexport class UrlUtil {\n  static queryString(qs?: Record<string, any> | undefined | null): string {\n    return _qs.stringify(qs);\n  }\n\n  static createPath(path: string, qs?: Record<string, any> | undefined | null) {\n    let queryString = UrlUtil.queryString(qs);\n    return path + (queryString.length > 0 ? '?' + queryString : '');\n  }\n}\n","import { ApiConfig } from './ApiConfig';\nimport { UrlUtil } from '../../../util/UrlUtil';\n\nconst axios = require('axios');\n\nexport interface IHeader {\n  Accept?: string;\n  'Accept-Language'?: string;\n  'Content-Type'?: string;\n  Authorization?: string;\n  'X-CSRF-TOKEN'?: string;\n  Host?: string;\n}\n\nexport class RestService {\n  createHeaders(qs?: Record<string, any>) {\n    let headers: IHeader = {\n      Accept: '*/*',\n      'Accept-Language': qs && qs.lang ? qs.lang : 'ja',\n      'Content-Type': 'application/json',\n    };\n    return headers;\n  }\n\n  get(\n    path: string,\n    qs: Record<string, any> = {},\n    headers: Record<string, any> = {},\n    useRequestBody = false\n  ) {\n    let _headers = Object.assign(this.createHeaders(qs), headers);\n    let config = {\n      baseURL: ApiConfig.serverEndpoint(),\n      headers: _headers,\n      withCredentials: false,\n    };\n    console.log(config);\n    try {\n      return axios.get(UrlUtil.createPath(path, qs), config);\n    } catch (e) {\n      console.error('Error! HTTP Status', e);\n    }\n  }\n\n  post(path: string, data: any, headers: Record<string, any> = {}) {\n    let _headers = Object.assign(this.createHeaders(), headers);\n    // if (ApiConfig.getCsrfToken()) {\n    //   headers['X-CSRF-TOKEN'] = ApiConfig.getCsrfToken();\n    // }\n\n    let config = {\n      baseURL: ApiConfig.serverEndpoint(),\n      headers: _headers,\n    };\n    console.log('post! serverEndpoint', ApiConfig.serverEndpoint());\n    console.log('post! path', path);\n    console.log('post! config', config);\n    try {\n      return axios.post(path, data, config);\n    } catch (e) {\n      console.error('Error! HTTP Status', e);\n    }\n  }\n\n  delete(\n    path: string,\n    qs: Record<string, any> = {},\n    headers: Record<string, any> = {},\n    useRequestBody = false\n  ) {\n    let _headers = Object.assign(this.createHeaders(qs), headers);\n    let config = {\n      baseURL: ApiConfig.serverEndpoint(),\n      headers: _headers,\n      withCredentials: false,\n    };\n    console.log(config);\n    try {\n      return axios.delete(UrlUtil.createPath(path, qs), config);\n    } catch (e) {\n      console.error('Error! HTTP Status', e);\n    }\n  }\n}\n","import { JsonConvert, OperationMode, ValueCheckingMode } from 'json2typescript';\nimport { Authentication } from '../domain/Authentication';\nimport { ApiConfig } from './ApiConfig';\nimport { RestService } from './RestService';\n\nconst tough = require('tough-cookie');\n\nexport interface RequestParams {\n  /**\n   * The name of API to be display on the error message\n   */\n  apiName: string;\n  path: string;\n  qs?: Record<string, any>;\n  headers?: Record<string, any>;\n  body?: any;\n  useRequestBody?: boolean;\n  classRef?: any;\n  skipRequestBodyParsing?: boolean;\n  authentication?: Authentication;\n  // pageRequest?: PageRequest;\n}\n\nexport class ApiService {\n  private _restService: RestService;\n  private _jsonConvert: JsonConvert;\n\n  constructor() {\n    this._restService = new RestService();\n    this._jsonConvert = new JsonConvert(OperationMode.ENABLE, ValueCheckingMode.ALLOW_OBJECT_NULL);\n  }\n\n  // async authenticate(authentication: Authentication) {\n  //   if (authentication.token) {\n  //     if (!authentication.csrfToken) {\n  //       const auth: Record<string, any> = await this.authentication(\n  //         authentication.token,\n  //         authentication.selectedCompanyContractId\n  //       );\n  //       const updatedAuth = authentication;\n  //       if (auth.csrfToken) {\n  //         updatedAuth.csrfToken = auth.csrfToken;\n  //       }\n  //       if (auth.cloudSession) {\n  //         updatedAuth.cloudSession = auth.cloudSession;\n  //       }\n  //       return updatedAuth;\n  //     }\n  //   }\n  //   return authentication;\n  // }\n\n  async get<T>(params: RequestParams): Promise<T> {\n    // const auth: Authentication = params.authentication;\n    // const response = await this.restRequestService.getRequest(params.apiName, params.qs);\n    const path = ApiConfig.serverEndpoint() + params.path;\n\n    const response = await this.restService.get(\n      ApiConfig.serverEndpoint() + params.path,\n      {},\n      {}\n    );\n\n   // const response = { body: 'test data' }; //  hide thuis part\n    const body = response.body ? JSON.parse(response.body) : undefined;\n    const data = body?.data;\n    if (params.classRef && data) {\n      if (Array.isArray(params.classRef))\n        return this.jsonConvert.deserialize<any>(data, params.classRef[0]) as T;\n      return this.jsonConvert.deserializeObject<T>(data, params.classRef);\n    }\n    return data;\n  }\n\n  get restService(): RestService {\n    return this._restService;\n  }\n\n  set restService(value: RestService) {\n    this._restService = value;\n  }\n\n  get jsonConvert(): JsonConvert {\n    return this._jsonConvert;\n  }\n\n  set jsonConvert(value: JsonConvert) {\n    this._jsonConvert = value;\n  }\n}\n","import { ApiService } from './ApiService';\n// import { FaxType } from '../domain/FaxType';\nimport { Authentication } from '../domain/Authentication';\n\nexport class LoginService extends ApiService {\n  async findAll() {\n    return 'test';\n  }\n\n  async findAllItems(authentication: Authentication) {\n    return this.get<any[]>({\n      apiName: 'user-all',\n    //   path: '/user/all',\n      path: 'https://datausa.io/api/data?drilldowns=Nation&measures=Population',\n      //   qs: { valideuser, validLicence },\n      authentication,\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { Grid, Row, Col, Panel, DOMHelper, Table, Pagination } from 'rsuite';\nimport { mockUsers } from '../../mock';\n\nimport { RestApiService } from '../../apiServices';\n\nconst { Column, HeaderCell, Cell } = Table;\nconst { getHeight } = DOMHelper;\n\nconst _data: any = mockUsers(10);\n\nexport type LayoutType = 'total' | '-' | 'pager' | '|' | 'limit' | 'skip';\nexport type Size = 'lg' | 'md' | 'sm' | 'xs';\n\nconst restApi: RestApiService = RestApiService.getInstance();\n\nconst Dashboard = () => {\n  const data: any = {\n    data: {\n      pageSize: 10,\n      pageNumber: 1,\n      totalPages: 28,\n      previous: false,\n      next: true,\n      totalCount: 273,\n      content: _data,\n      paginationContent: null,\n      hasData: true,\n      pagingArea: true,\n    },\n    error: null,\n    hasData: true,\n    hasError: false,\n  };\n\n  // pagination\n  const limitOptions = [30, 50, 100];\n\n  const [prev, setPrev] = useState(true);\n  const [next, setNext] = useState(true);\n  const [first, setFirst] = useState(true);\n  const [last, setLast] = useState(true);\n  const [ellipsis, setEllipsis] = useState(true);\n  const [boundaryLinks, setBoundaryLinks] = useState(true);\n  const [activePage, setActivePage] = useState(1);\n  const [size, setSize] = useState<Size>('xs');\n  const [maxButtons, setMaxButtons] = useState(5);\n  const [total, setTotal] = useState(data.data.totalCount);\n  const [layout, setLayout] = useState<LayoutType[]>(['pager', 'skip']);\n  // const [layout, setLayout] = useState<LayoutType[]>(['total', '-', 'limit', '|', 'pager', 'skip']);\n  const [limit, setLimit] = useState(50);\n\n  const testData = restApi.loginService.findAll();\n\n  console.log('%c testData:', 'color:yellow', testData);\n\n  return (\n    <Panel className=\"rs-panel-main\" header={<h3 className=\"title\">Dashboard</h3>}>\n      <Panel className=\"rs-panel-content\">\n        <Grid fluid>\n          <Row>\n            <Table\n              virtualized\n              height={Math.max(getHeight(window) - 150, 400)}\n              data={data.data.content}\n            >\n              <Column width={70} align=\"center\" fixed>\n                <HeaderCell>Id</HeaderCell>\n                <Cell dataKey=\"id\" />\n              </Column>\n\n              <Column width={130}>\n                <HeaderCell>First Name</HeaderCell>\n                <Cell dataKey=\"firstName\" />\n              </Column>\n\n              <Column width={130}>\n                <HeaderCell>Last Name</HeaderCell>\n                <Cell dataKey=\"lastName\" />\n              </Column>\n\n              <Column width={100}>\n                <HeaderCell>Gender</HeaderCell>\n                <Cell dataKey=\"gender\" />\n              </Column>\n\n              <Column width={100}>\n                <HeaderCell>Age</HeaderCell>\n                <Cell dataKey=\"age\" />\n              </Column>\n\n              <Column width={200}>\n                <HeaderCell>City</HeaderCell>\n                <Cell dataKey=\"city\" />\n              </Column>\n\n              <Column minWidth={200} flexGrow={1}>\n                <HeaderCell>Email</HeaderCell>\n                <Cell dataKey=\"email\" />\n              </Column>\n            </Table>\n          </Row>\n          <Pagination\n            layout={layout}\n            size={size}\n            prev={prev}\n            next={next}\n            first={first}\n            last={last}\n            ellipsis={ellipsis}\n            boundaryLinks={boundaryLinks}\n            total={total}\n            limit={limit}\n            limitOptions={limitOptions}\n            maxButtons={maxButtons}\n            activePage={activePage}\n            onChangePage={setActivePage}\n            onChangeLimit={setLimit}\n          />\n\n          {/* <Pagination total={100} limit={10} activePage={activePage} onChangePage={setActivePage} /> */}\n        </Grid>\n      </Panel>\n    </Panel>\n  );\n};\n\nexport default Dashboard;\n","import Dashboard from './Dashboard';\n\nexport default Dashboard;\n","//import redaxios from \"redaxios\";\nconst axios = require('axios');\n\nexport async function login(params: { email: string; password: string }): Promise<any> {\n  const response = await axios.post('/api/sessions', { session: params });\n\n  return response.data.data;\n}\n\nexport async function logout(): Promise<unknown> {\n  const response = await axios.delete('/api/sessions');\n\n  return response.data.data;\n}\n","const axios = require('axios');\n\nexport async function getCurrentUser(): Promise<any> {\n  const response = await axios.get('/api/user');\n\n  return response.data.data;\n}\n\nexport async function signUp(params: {\n  email: string;\n  name: string;\n  password: string;\n}): Promise<any> {\n  const response = await axios.post('/api/user', { user: params });\n\n  return response.data.data;\n}\n","import React, { createContext, ReactNode, useContext, useEffect, useMemo, useState } from 'react';\n//import type { Response } from 'axios';\nimport axios, { AxiosResponse as Response } from 'axios';\n//import { useHistory, useLocation } from 'react-router-dom';\nimport * as sessionsApi from '../apiServices/demo/sessions';\nimport * as usersApi from '../apiServices/demo/users';\n\ninterface User {\n  name: string | null;\n  email: string | null;\n}\nexport interface AuthContextType {\n  user: User;\n  loading: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error?: Response<any>;\n  login: (email: string, password: string) => void;\n  signUp: (email: string, name: string, password: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType);\n\nexport function AuthProvider({ children }: { children: ReactNode }): JSX.Element {\n  const [user, setUser] = useState<User>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [error, setError] = useState<Response<any> | null>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingInitial, setLoadingInitial] = useState<boolean>(true);\n  // const history = useHistory();\n  // const location = useLocation();\n\n  //   useEffect(() => {\n  //     if (error) setError(null);\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, [location.pathname]);\n\n  useEffect(() => {\n    usersApi\n      .getCurrentUser()\n      .then((newUser: React.SetStateAction<User | undefined>) => setUser(newUser))\n      .catch((_error: any) => {})\n      .finally(() => setLoadingInitial(false));\n  }, []);\n\n  function login(email: string, password: string) {\n    setLoading(true);\n\n    sessionsApi\n      .login({ email, password })\n      .then((newUser: React.SetStateAction<User | undefined>) => {\n        setUser(newUser);\n        // history.push(\"/\");\n      })\n      .catch((newError: any) => setError(newError))\n      .finally(() => setLoading(false));\n  }\n\n  function signUp(email: string, name: string, password: string) {\n    setLoading(true);\n\n    usersApi\n      .signUp({ email, name, password })\n      .then((newUser: any) => {\n        setUser(newUser);\n        //  history.push(\"/\");\n      })\n      .catch((newError: any) => setError(newError))\n      .finally(() => setLoading(false));\n  }\n\n  function logout() {\n    sessionsApi.logout().then(() => setUser(undefined));\n  }\n\n  // Make the provider update only when it should\n  const memoedValue = useMemo(\n    () => ({\n      user,\n      loading,\n      error,\n      login,\n      signUp,\n      logout,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [user, loading, error]\n  );\n\n  return (\n    <AuthContext.Provider value={memoedValue as AuthContextType}>\n      {!loadingInitial && children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default function useAuth(): AuthContextType {\n  return useContext(AuthContext);\n}\n","import React, { PropsWithChildren } from 'react';\nimport { UseAppMethods } from '../hook/UseApp';\n\nexport const AppContext = React.createContext<UseAppMethods | null>(null);\n\nexport const useAppContext = () => React.useContext(AppContext) as UseAppMethods;\n\nexport const AppProvider = ({ children, ...props }: PropsWithChildren<UseAppMethods>) => {\n  return <AppContext.Provider value={{ ...props }}>{children}</AppContext.Provider>;\n};\n","import About from './About';\n\nexport default About;\n","import React, { useState } from 'react';\nimport Select, {\n  components,\n  MultiValueGenericProps,\n  MultiValueProps,\n  OnChangeValue,\n  Props,\n} from 'react-select';\n//import { Field, Form, Formik, FormikActions, FormikProps } from 'formik';\nimport {\n  Row,\n  Col,\n  Panel,\n  Button,\n  Schema,\n  Grid,\n  Input,\n  Whisper,\n  Tooltip,\n  InputGroup,\n  DatePicker,\n  DateRangePicker,\n} from 'rsuite';\nimport useAuth from '../../context/useAuth';\n//import useAuth from '@src/context/useAuth';\n\nimport { useAppContext } from '../../context/AppContext';\n\nconst About = () => {\n  const { authUser } = useAppContext();\n\n  console.log('%c:authUser', 'color:yellow', authUser);\n  const { login, loading, error } = useAuth();\n\n  // function handleSubmit(event: FormEvent<HTMLFormElement>) {\n  //   event.preventDefault();\n\n  //   const formData = new FormData(event.currentTarget);\n\n  //   login(formData.get('email') as string, formData.get('password') as string);\n  // }\n\n  const styles = {\n    width: 300,\n    marginBottom: 10,\n  };\n\n  const languageOptions = [\n    {\n      label: 'Chinese',\n      value: 'zh-CN',\n    },\n    {\n      label: 'English (US)',\n      value: 'en-US',\n    },\n    {\n      label: 'English (GB)',\n      value: 'en-GB',\n    },\n    {\n      label: 'French',\n      value: 'fr-FR',\n    },\n    {\n      label: 'Spanish',\n      value: 'es-ES',\n    },\n  ];\n\n  const options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ];\n\n  const [selectedOption, setSelectedOption] = useState<any>([]);\n\n  // const onChange = (option: readonly Option[], actionMeta: ActionMeta<Option>) => {\n  //   console.log('%c onchange:', 'color:yellow');\n  // };\n\n  console.log('%cselectedOption:', 'color:yellow', selectedOption);\n\n  return (\n    <Panel className=\"rs-panel-main\" header={<h3 className=\"title\">About</h3>}>\n      <Panel className=\"rs-panel-content\">\n        <Grid fluid>\n          <Row style={{ height: '500px' }}>\n            {/* <Field\n              className=\"custom-select\"\n              name=\"multiLanguages\"\n              options={languageOptions}\n              component={CustomSelect}\n              placeholder=\"Select multi languages...\"\n              isMulti={true}\n            /> */}\n\n            {/* <CustomSelect   name=\"multiLanguages\" options={languageOptions} isMulti={true} /> */}\n\n            <Select\n              defaultValue={[options[2]]}\n              isMulti\n              name=\"colors\"\n              options={options}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              onChange={setSelectedOption}\n            />\n          </Row>\n        </Grid>\n      </Panel>\n    </Panel>\n  );\n};\n\nexport default About;\n","import React, { FC } from 'react';\n// import * as errors from '@/images/errors';\n\nexport interface DefaultLayoutProps {\n  code: 404;\n  children?: React.ReactNode;\n}\n\nexport const ErrorPage: FC<DefaultLayoutProps> = props => {\n  const { code, children } = props;\n  return (\n    <div className=\"error-page\">\n      <div className=\"item\">\n        {/* <img src={errors[`Error${code}Img`]} /> */}\n        <div className=\"text\">\n          <h1 className=\"error-page-code\">{code}</h1>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorPage.displayName = 'ErrorPage';\n","import { ErrorPage } from './ErrorPage';\n\nexport default ErrorPage;\n","import Error404 from './Error404';\n\nexport default Error404;\n","import React from 'react';\nimport ErrorPage from '../../../components/ErrorPage';\nimport { IconButton } from 'rsuite';\nimport ArrowLeftLine from '@rsuite/icons/ArrowLeftLine';\n\nexport default () => (\n  <ErrorPage code={404}>\n    <p className=\"error-page-title\">Oops… You just found an error page</p>\n    <p className=\"error-page-subtitle text-muted \">\n      We are sorry but the page you are looking for was not found\n    </p>\n    <IconButton icon={<ArrowLeftLine />} appearance=\"primary\" href=\"/\">\n      Take me home\n    </IconButton>\n  </ErrorPage>\n);\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport locales from './locales';\nimport logo from './logo.svg';\nimport DefaultLayout from './components/layout';\nimport DashboardPage from './pages/dashboard';\nimport About from './pages/about';\nimport Error404Page from './pages/authentication/404';\nimport { AuthProvider } from './context/useAuth';\n\nimport { useApp } from './hook/UseApp';\nimport { AppProvider } from './context/AppContext';\n\nfunction App() {\n  const useAppMethods = useApp();\n  const { setAuthUser } = useAppMethods;\n\n  useEffect(() => {\n    setAuthUser({ name: 'jithu' });\n  }, [setAuthUser]);\n\n  return (\n    <AppProvider {...useAppMethods}>\n      <BrowserRouter basename=\"\">\n        <AuthProvider>\n          <Routes>\n            <Route path=\"/\" element={<DefaultLayout />}>\n              <Route index element={<DashboardPage />} />\n              <Route path=\"/home\" element={<DashboardPage />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/contact\" element={<DashboardPage />} />\n            </Route>\n            <Route path=\"*\" element={<Error404Page />} />\n            <Route path=\"login\" element={<Error404Page />} />\n          </Routes>\n        </AuthProvider>\n      </BrowserRouter>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React, { useState, useMemo } from 'react';\n\nexport type UseAppMethods = {\n  authUser: any;\n  setAuthUser: (user: any) => void;\n};\n\nexport const useApp = (): UseAppMethods => {\n  const [authUser, setAuthUser] = useState<any>();\n\n  return {\n    authUser,\n    setAuthUser,\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n//import { ErrorPage } from '@components/ErrorPage';\n\n//import { ErrorPage } from '@components/ErrorPage';\n\n//import App from '@src/App';\nimport './styles/index.less';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}